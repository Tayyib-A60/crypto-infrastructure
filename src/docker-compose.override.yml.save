version: '3.3'

volumes:
  # geth_data: {}
  redis_data: {}
  event_store_data: {}

services:
    rabbitmq:
        environment:
            - AMQP_URL=amqp://rabbitmq?connection_attempts=5&retry_delay=5
            - RABBITMQ_DEFAULT_USER=Admin
            - RABBITMQ_DEFAULT_PASS=Dev@12345


    redis:
        volumes:
            - redis_data:/data
    # geth:
    #    ports:
    #        - "8545:8545"
    #        - "8546:8546"
    #        - "8547:8547"
    #        - "30303:30303"
    #        - "30303:30303/udp"
    #        - "30304:30304"
    #    volumes:
    #        - geth_data:/root/.ethereum

    mongo:
        ports:
            - "27017:27017"
      
    eventstore:
        environment: 
            - EVENTSTORE_DEV=True
            - EVENTSTORE_ENABLE_EXTERNAL_TCP=True
            - EVENTSTORE_CLUSTER_SIZE=1
            - EVENTSTORE_INT_TCP_PORT=1112
            - EVENTSTORE_EXT_TCP_PORT=1113
            - EVENTSTORE_INT_HTTP_PORT=2112
            - EVENTSTORE_EXT_HTTP_PORT=2113
            
        ports:
            - "2113:2113"
            - "1113:1113"
        volumes:
            - event_store_data:/data

    walletscrypto:
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
        ports: 
            - "4000:4000"
            - "4001:4001"
        volumes:
            - ./SSLCertificates/WalletsCrypto:/certificates/
  
   # sqlserver:
    #    environment:
     #       - SA_PASSWORD=Dev@12345
      #      - ACCEPT_EULA=Y
        # ports: 
        #     - "1433:1433"
       # volumes:
        #    - ./Infrastructure/SqlServer:/scripts/
        #command:
         #   - /bin/bash
          #  - -c 
           # - |
            #    # Launch MSSQL and send to background
             #   /opt/mssql/bin/sqlservr &
              #  # Wait for it to be available
               # echo "Waiting for MS SQL to be available..."
                3/opt/mssql-tools/bin/sqlcmd -l 30 -S localhost -h-1 -V1 -U sa -P $$SA_PASSWORD -Q "SET NOCOUNT ON SELECT \"YAY WE ARE UP\" , @@servername"
                is_up=$$?
                while [ $$is_up -ne 0 ] ; do 
                    echo -e $$(date) 
                    /opt/mssql-tools/bin/sqlcmd -l 30 -S localhost -h-1 -V1 -U sa -P $$SA_PASSWORD -Q "SET NOCOUNT ON SELECT \"YAY WE ARE UP\" , @@servername"
                    is_up=$$?
                    sleep 5 
                done
                # Run every script in /scripts
                # TODO set a flag so that this is only done once on creation, 
                #      and not every time the container runs
                for foo in /scripts/*.sql
                  do /opt/mssql-tools/bin/sqlcmd -U sa -P $$SA_PASSWORD -l 30 -e -i $$foo
                done
                # So that the container doesn't shut down, sleep this thread
                sleep infinity

    bitcoin-watcher:
        volumes:
            - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
